function buildGeometry(slices, quotes) {
	var dataSphere = sphere(slices, quotes, "quotato")
	var color5 = [1.0, 0.0, 0.0];
	var vert = []
	var normals = []
	var index = dataSphere[1]
	for (i = 0; i < dataSphere[0].length; i++) {
		vert.push(dataSphere[0][i][0], dataSphere[0][i][1], dataSphere[0][i][2])
		normals.push(dataSphere[0][i][3], dataSphere[0][i][4], dataSphere[0][i][5])
	}
	return {
		position: vert,
		normal: normals,
		indices: index,
	};
}


function sphere(slices, quotes, key) {
	var quota = quotes;
	var anglequota = (Math.PI) / quota;
	var angleslice = (2 * Math.PI) / slices;
	// Creates vertices
	var k = 0;
	var vert = [];
	for (j = 1; j < quota; j++) {
		for (i = 0; i < slices; i++) {
			x = Math.sin(i * angleslice) * Math.sin(j * anglequota);
			y = Math.cos(j * anglequota);
			z = Math.cos(i * angleslice) * Math.sin(j * anglequota);
			vert[k++] = [x, y, z];
		}
	}
	var top = k; vert[k++] = [0, 1, 0];
	var bottom = k; vert[k++] = [0, -1, 0];

	// Creates indices
	var ind = [];
	k = 0;
	for (i = 0; i < slices; i++) {
		// upper	
		ind[k++] = top;
		ind[k++] = i;
		ind[k++] = (i + 1) % slices;
		for (j = 0; j < quota - 2; j++) {

			ind[k++] = (i + 1) % slices + (j) * slices;
			ind[k++] = i + (j) * slices;
			ind[k++] = i + (j + 1) * slices;

			ind[k++] = (i + 1) % slices + (j + 1) * slices;
			ind[k++] = (i + 1) % slices + (j) * slices;
			ind[k++] = i + (j + 1) * slices;
		}
		//close bottom		
		ind[k++] = i + (j) * slices;
		ind[k++] = bottom;
		ind[k++] = (i + 1) % slices + (j) * slices;
	}

	return normalMode(vert, ind, key);
}

function barrier(){
	var barrier = {
		position: [],
		normal: [],
		texcoord: [],
		indices: [],
	};
	
	var vert = [
		//front face
			[-1.0,1.0,0.0],[-1.0,1.0,1.0],[1.0,1.0,1.0],
			[-1.0,1.0,0.0],[1.0,1.0,1.0],[1.0,1.0,0.0],
	];
	
	var ind = [];
	for(var i=5;i>=0;i--) {
		ind.push(i);
		barrier.indices.push(i);
	}
	
	var uv = [
		//front face
		[1,1],	[0,1],	[1,0],
		[0,1],	[0,0],	[1,0],
	];

	var normal = normalArray(vert,ind);

	vert.forEach(element => {
		for (let i = 0; i < element.length; i++) {
			const el = element[i];
			barrier.position.push(el)
		}
	});

	normal.forEach(element => {
		for (let i = 0; i < element.length; i++) {
			const el = element[i];
			barrier.normal.push(el)
		}
	});

	ind.forEach(element => {

		for (let i = 0; i < element.length; i++) {
			const el = element[i];
			barrier.indices.push(el)
		}
	});

	uv.forEach(element => {

		for (let i = 0; i < element.length; i++) {
			const el = element[i];
			barrier.texcoord.push(el)
		}
	});
	return barrier;
}

function cube() {
	var mycube = {
		position: [],
		normal: [],
		texcoord: [],
		indices: [],
	};
	var vert = [
		//back face
			[-1.0,-1.0,-1.0],[-1.0,1.0,-1.0],[1.0,1.0,-1.0],
			[1.0,1.0,-1.0],[1.0,-1.0,-1.0],[-1.0,-1.0,-1.0],	
		//front face
			[-1.0,-1.0,1.0],[1.0,1.0,1.0],[-1.0,1.0,1.0],
			[1.0,1.0,1.0],[-1.0,-1.0,1.0],[1.0,-1.0,1.0],
		//dx face
			[1.0,1.0,-1.0],[1.0,1.0,1.0], [1.0,-1.0,-1.0],
			[1.0,1.0,1.0], [1.0,-1.0,1.0],[1.0,-1.0,-1.0],
		//sx face
			[-1.0,1.0,-1.0],[-1.0,-1.0,-1.0],[-1.0,1.0,1.0],
			[-1.0,1.0,1.0],[-1.0,-1.0,-1.0],[-1.0,-1.0,1.0],
		//top face
			[-1.0,1.0,-1.0],[1.0,1.0,1.0],[1.0,1.0,-1.0],
			[-1.0,1.0,1.0],[1.0,1.0,1.0],[-1.0,1.0,-1.0],
		//bottom face
			[-1.0,-1.0,-1.0],[1.0,-1.0,-1.0],[1.0,-1.0,1.0],
			[-1.0,-1.0,1.0],[-1.0,-1.0,-1.0],[1.0,-1.0,1.0],
		];	
	
	var ind = [];
	for(var i=0;i<36;i++) {
		ind.push(i);
		mycube.indices.push(i);
	}
	var uv = [
		//back face
			[0,0],	[0,1],	[1,1],
			[1,1],[1,0],[0,0],
		//front face	
			[0,1],	[1,0],	[0,0],
			[1,0],	[0,1],	[1,1],	
		//dx face
			[1,1],	[0,1],	[1,0],
			[0,1],	[0,0],	[1,0],
		//sx face
			[0,1],	[0,0],	[0,1],
			[0,1], 	[0,0],	[0,0],
		//top face
			[0,1],	[1,0],	[1,1],
			[0,0],	[1,0],	[0,1],
		//bottom face
			[0,0],	[1,0],	[1,1],
			[0,1],	[0,0],	[1,1]	
		];	
	var normal = normalArray(vert,ind);
	vert.forEach(element => {
		for (let i = 0; i < element.length; i++) {
			const el = element[i];
			mycube.position.push(el)
		}
	});
	
	normal.forEach(element => {
		for (let i = 0; i < element.length; i++) {
			const el = element[i];
			mycube.normal.push(el)
		}
	});
	
	ind.forEach(element => {
		
		for (let i = 0; i < element.length; i++) {
			const el = element[i];
			mycube.indices.push(el)
		}
	});
	
	uv.forEach(element => {
		
		for (let i = 0; i < element.length; i++) {
			const el = element[i];
			mycube.texcoord.push(el)
		}
	});
	return mycube;
}
function world() {
	return {
		position: [-0.172738,3.165391,0.157984,0.392176,3.103807,-0.535798,-0.238083,3.128375,-0.480714,0.311232,2.949461,-1.130624,-0.292668,2.967402,-1.087829,0.242365,2.688665,-1.669381,-0.3346,2.699311,-1.635929,0.200165,2.336825,-2.138617,-0.363538,2.341218,-2.112116,0.469477,3.137852,0.089277,0.99685,2.957232,-0.579283,0.893126,2.82152,-1.147104,0.794946,2.587096,-1.658159,0.737408,2.262713,-2.100204,1.081685,2.983978,0.018142,1.545925,2.701632,-0.621124,1.420203,2.592841,-1.15529,1.284297,2.407707,-1.621118,1.205818,2.13817,-2.012146,1.634928,2.720081,-0.051656,2.021784,2.352476,-0.672861,1.872038,2.271853,-1.186868,1.689439,2.141826,-1.622613,1.530344,2.014376,-1.916985,-0.857194,3.028987,-0.406145,-0.806228,3.062041,0.219991,-1.432204,2.81355,-0.32745,-1.393834,2.838628,0.271873,-1.939337,2.499154,-0.260192,-1.910322,2.515532,0.311878,-2.367494,2.102762,-0.218771,-2.345323,2.111524,0.339745,-0.884311,2.877951,-1.004932,-1.433786,2.683912,-0.902979,-1.915744,2.398839,-0.806225,-2.31959,2.032861,-0.749317,-0.899037,2.62104,-1.548023,-1.417664,2.457247,-1.42361,-1.8598,2.225704,-1.289141,-2.218873,1.919305,-1.21135,-0.914469,2.27185,-2.019144,-1.416054,2.138113,-1.870231,-1.834067,1.96406,-1.689131,-2.112132,1.807618,-1.531637,-0.722934,2.974831,0.838,-0.100249,3.072352,0.790632,-0.623024,2.772021,1.415005,-0.025072,2.858158,1.380147,-0.523653,2.467751,1.926263,0.048896,2.541766,1.900402,-0.441083,2.076958,2.359277,0.119331,2.141436,2.339767,-1.30463,2.76213,0.862015,-1.185105,2.583189,1.413209,-1.060439,2.311533,1.899153,-0.966364,1.953165,2.307766,-1.818447,2.450137,0.8744,-1.680903,2.303245,1.394318,-1.525171,2.088722,1.839998,-1.417143,1.792179,2.203248,-2.250238,2.054675,0.888391,-2.092438,1.93947,1.390919,-1.897038,1.786537,1.812189,-1.725258,1.647547,2.093697,0.527675,3.048005,0.711143,1.126586,2.902927,0.615075,1.669473,2.649052,0.519501,2.141823,2.300636,0.440644,2.115063,2.363708,-0.117855,0.57469,2.840643,1.294209,1.14562,2.715707,1.177704,1.659734,2.490959,1.055891,2.104101,2.171842,0.964551,0.620432,2.531803,1.810949,1.156887,2.435084,1.675255,1.624702,2.26298,1.521105,2.017313,2.000923,1.414655,0.676377,2.138164,2.246168,1.192064,2.071123,2.089002,1.628814,1.95814,1.893977,1.923516,1.845829,1.722642,0.342073,-0.144259,3.152249,0.920695,0.523623,2.992096,0.300056,0.500633,3.119909,0.842166,1.12422,2.846292,0.246725,1.113024,2.962229,0.755228,1.667309,2.593108,0.185589,1.664417,2.696251,0.974102,-0.107022,3.018968,1.493429,0.535996,2.748977,1.394891,1.109931,2.626181,1.282557,1.626494,2.405007,1.553661,-0.066261,2.766992,1.992221,0.54943,2.409083,1.875595,1.090222,2.316907,1.73278,1.56326,2.151322,2.055885,-0.024284,2.418108,2.404098,0.576476,1.990599,2.268059,1.098001,1.929974,2.087475,1.543227,1.826307,-0.333003,0.457038,3.123255,-0.305026,-0.175537,3.154464,-0.943083,0.406518,3.003304,-0.927702,-0.199123,3.028897,-1.501808,0.36361,2.772518,-1.496111,-0.214373,2.791092,-1.993483,0.342388,2.446077,-1.995537,-0.221458,2.458309,-0.357788,1.060377,2.9702,-0.93969,0.985652,2.867049,-1.469456,0.911967,2.661487,-1.93227,0.873776,2.361639,-0.39,1.605695,2.710007,-0.936736,1.50715,2.631639,-1.419328,1.393792,2.473327,-1.828529,1.332389,2.226145,-0.264298,-0.800973,3.059916,0.36986,-0.78271,3.053697,-0.224267,-1.384661,2.847265,0.382201,-1.376704,2.834273,-0.198545,-1.900858,2.53413,0.379647,-1.899936,2.514082,-0.200165,-2.336825,2.138617,0.363538,-2.341218,2.112116,-0.877659,-0.797657,2.944139,-0.812367,-1.357247,2.751807,-0.75429,-1.850037,2.466355,-0.737408,-2.262713,2.100204,-1.440184,-0.785647,2.717191,-1.349868,-1.315222,2.553927,-1.249211,-1.769699,2.319943,-1.205818,-2.13817,2.012146,-1.934485,-0.778926,2.39281,-1.817933,-1.292191,2.258287,-1.666451,-1.724388,2.079404,-1.530344,-2.014376,1.916985,0.988152,-0.732717,2.925949,1.556676,-0.665254,2.684901,2.051172,-0.596224,2.347702,2.460303,-0.541055,1.930975,2.471028,0.017436,1.992037,0.973504,-1.317894,2.718445,1.51838,-1.227823,2.502293,1.990473,-1.130625,2.198682,2.377472,-1.061308,1.815421,0.943993,-1.83565,2.411175,1.460274,-1.724358,2.229055,1.89711,-1.59245,1.984836,2.243505,-1.505392,1.665826,0.914469,-2.27185,2.019144,1.416054,-2.138112,1.870231,1.834067,-1.96406,1.689131,2.112132,-1.807618,1.531637,0.172738,-3.165391,-0.157984,0.857194,-3.028987,0.406146,0.238083,-3.128375,0.480714,0.884311,-2.877951,1.004932,0.292668,-2.967402,1.087829,0.899037,-2.62104,1.548024,0.3346,-2.699311,1.635929,0.806228,-3.062041,-0.219991,1.432204,-2.81355,0.32745,1.433786,-2.683912,0.902979,1.417664,-2.457247,1.42361,1.393834,-2.838628,-0.271873,1.939337,-2.499154,0.260192,1.915744,-2.398838,0.806225,1.8598,-2.225703,1.289141,1.910322,-2.515532,-0.311878,2.367494,-2.102762,0.218771,2.31959,-2.032861,0.749317,2.218873,-1.919304,1.21135,-0.392176,-3.103807,0.535798,-0.469477,-3.137852,-0.089277,-0.99685,-2.957232,0.579283,-1.081685,-2.983978,-0.018142,-1.545925,-2.701632,0.621124,-1.634928,-2.720081,0.051656,-2.021784,-2.352476,0.672861,-2.115063,-2.363708,0.117855,-0.311232,-2.949461,1.130624,-0.893126,-2.82152,1.147104,-1.420203,-2.592841,1.15529,-1.872038,-2.271853,1.186868,-0.242365,-2.688665,1.669381,-0.794946,-2.587096,1.658159,-1.284297,-2.407707,1.621118,-1.689439,-2.141826,1.622613,-0.527675,-3.048005,-0.711143,0.100249,-3.072352,-0.790632,-0.57469,-2.840643,-1.294209,0.025072,-2.858158,-1.380147,-0.620432,-2.531803,-1.810949,-0.048896,-2.541766,-1.900402,-0.676377,-2.138164,-2.246168,-0.119331,-2.141436,-2.339767,-1.126586,-2.902927,-0.615075,-1.14562,-2.715707,-1.177704,-1.156887,-2.435084,-1.675255,-1.192064,-2.071123,-2.089002,-1.669473,-2.649052,-0.519501,-1.659734,-2.490959,-1.055891,-1.624702,-2.26298,-1.521105,-1.628814,-1.95814,-1.893977,-2.141823,-2.300636,-0.440644,-2.104101,-2.171842,-0.964551,-2.017313,-2.000923,-1.414655,-1.923516,-1.845829,-1.722642,0.722934,-2.974831,-0.838,1.30463,-2.76213,-0.862015,1.818447,-2.450137,-0.8744,2.250238,-2.054675,-0.888391,2.345323,-2.111523,-0.339745,0.623024,-2.772021,-1.415005,1.185105,-2.583189,-1.413209,1.680903,-2.303245,-1.394318,2.092438,-1.93947,-1.390919,0.523653,-2.467751,-1.926263,1.060439,-2.311533,-1.899153,1.525171,-2.088722,-1.839998,1.897038,-1.786537,-1.812189,0.441083,-2.076958,-2.359277,0.966364,-1.953165,-2.307766,1.417143,-1.792179,-2.203248,1.725258,-1.647547,-2.093697,-0.342073,0.144259,-3.152249,0.333003,-0.457038,-3.123255,-0.300056,-0.500633,-3.119909,0.357788,-1.060377,-2.9702,-0.246725,-1.113024,-2.962229,0.39,-1.605695,-2.710007,-0.185589,-1.664417,-2.696251,0.441083,-2.076958,-2.359277,-0.119331,-2.141436,-2.339767,0.305026,0.175537,-3.154464,0.943083,-0.406518,-3.003304,0.939689,-0.985652,-2.867049,0.936736,-1.50715,-2.631639,0.966364,-1.953165,-2.307766,0.927702,0.199123,-3.028897,1.501808,-0.36361,-2.772518,1.469456,-0.911967,-2.661487,1.419328,-1.393792,-2.473327,1.417143,-1.792179,-2.203248,1.496112,0.214373,-2.791091,1.993483,-0.342388,-2.446077,1.932271,-0.873776,-2.361639,1.828529,-1.332389,-2.226145,1.725258,-1.647547,-2.093697,-0.920695,-0.523623,-2.992096,-0.974102,0.107022,-3.018968,-1.493429,-0.535996,-2.748977,-1.553662,0.066261,-2.766992,-1.992221,-0.54943,-2.409083,-2.055885,0.024284,-2.418108,-2.404098,-0.576476,-1.990599,-2.471028,-0.017436,-1.992037,-0.842166,-1.12422,-2.846292,-1.394891,-1.109931,-2.626181,-1.875594,-1.090222,-2.316907,-2.268059,-1.098001,-1.929974,-0.755228,-1.667309,-2.593108,-1.282557,-1.626495,-2.405008,-1.73278,-1.563261,-2.151322,-2.087475,-1.543227,-1.826307,-0.676377,-2.138164,-2.246168,-1.192064,-2.071123,-2.089002,-1.628814,-1.95814,-1.893977,-1.923516,-1.845829,-1.722642,-0.988152,0.732717,-2.925949,-0.36986,0.78271,-3.053697,-0.973504,1.317894,-2.718445,-0.382201,1.376704,-2.834273,-0.943993,1.83565,-2.411175,-0.379647,1.899936,-2.514082,-0.914469,2.27185,-2.019144,-0.363538,2.341218,-2.112116,-1.556676,0.665255,-2.684901,-1.518381,1.227823,-2.502293,-1.460274,1.724358,-2.229055,-1.416054,2.138113,-1.870231,-2.051173,0.596224,-2.347702,-1.990473,1.130625,-2.198682,-1.89711,1.592451,-1.984836,-1.834067,1.96406,-1.689131,-2.460303,0.541055,-1.930975,-2.377472,1.061308,-1.815421,-2.243505,1.505392,-1.665826,-2.112132,1.807618,-1.531637,0.264298,0.800973,-3.059916,0.877659,0.797657,-2.944139,1.440184,0.785647,-2.717191,1.934485,0.778926,-2.39281,1.995537,0.221458,-2.458309,0.224267,1.38466,-2.847265,0.812367,1.357247,-2.751807,1.349868,1.315222,-2.553927,1.817933,1.292191,-2.258287,0.198545,1.900858,-2.53413,0.75429,1.850037,-2.466355,1.249211,1.769699,-2.319943,1.666451,1.724388,-2.079404,0.200165,2.336825,-2.138617,0.737408,2.262713,-2.100204,1.205818,2.13817,-2.012146,1.530344,2.014376,-1.916985,3.152972,0.168369,-0.323907,3.06254,0.760208,0.342684,3.155188,0.135767,0.317571,2.948128,0.69667,0.947464,3.032,0.098418,0.933695,2.724362,0.630311,1.501684,2.798556,0.058483,1.496383,3.056856,0.805306,-0.28567,2.851575,1.345471,0.364312,2.756739,1.259709,0.942348,2.560883,1.16556,1.468962,2.839228,1.39904,-0.236572,2.538798,1.863988,0.39313,2.471405,1.757273,0.937359,2.326277,1.62846,1.418116,2.519089,1.922591,-0.179801,2.141823,2.300636,0.440644,2.104101,2.171842,0.964551,2.017313,2.000923,1.414655,3.123129,-0.492437,0.279402,3.11902,-0.47393,-0.348712,2.971104,-1.090307,0.241383,2.96162,-1.083672,-0.359106,2.713883,-1.631655,0.216883,2.697986,-1.633661,-0.355697,2.367494,-2.102762,0.218771,2.345323,-2.111523,-0.339745,3.006415,-0.50191,0.885467,2.871665,-1.073445,0.822043,2.639273,-1.588306,0.765517,2.31959,-2.032861,0.749317,2.780788,-0.513983,1.441366,2.671399,-1.052943,1.352567,2.485628,-1.524583,1.253712,2.218873,-1.919304,1.21135,2.992484,-0.4362,-0.963984,3.021382,0.194105,-0.95293,2.75135,-0.392398,-1.533165,2.771306,0.21163,-1.532833,2.412622,-0.35654,-2.03141,2.423068,0.220631,-2.038274,2.84614,-1.037384,-0.947534,2.627492,-0.970125,-1.493198,2.319366,-0.904239,-1.969109,2.594321,-1.581873,-0.91743,2.406727,-1.491391,-1.434543,2.153621,-1.386091,-1.874877,2.250238,-2.054675,-0.888391,2.092438,-1.93947,-1.390919,1.897038,-1.786537,-1.812189,2.930684,0.818103,-0.903492,2.724485,1.401294,-0.82949,2.416602,1.917344,-0.747211,2.021784,2.352476,-0.672861,2.115063,2.363708,-0.117855,2.690936,0.809087,-1.476056,2.508811,1.368143,-1.381502,2.234208,1.860494,-1.273333,1.872038,2.271853,-1.186868,2.353558,0.791344,-1.977129,2.204192,1.320586,-1.863354,1.988532,1.774713,-1.723552,1.689439,2.141826,-1.622613,-3.152972,-0.168369,0.323907,-2.930684,-0.818103,0.903492,-3.021381,-0.194105,0.95293,-2.690936,-0.809087,1.476056,-2.771306,-0.21163,1.532833,-2.353558,-0.791344,1.977129,-2.423068,-0.220631,2.038274,-3.056856,-0.805306,0.28567,-2.724485,-1.401294,0.82949,-2.508811,-1.368143,1.381502,-2.204192,-1.320586,1.863354,-2.839228,-1.39904,0.236572,-2.416602,-1.917344,0.747211,-2.234208,-1.860494,1.273333,-1.988532,-1.774713,1.723552,-2.519089,-1.922591,0.179801,-2.021784,-2.352476,0.672861,-1.872038,-2.271853,1.186868,-1.689439,-2.141826,1.622613,-2.992484,0.4362,0.963984,-3.11902,0.47393,0.348712,-2.84614,1.037384,0.947534,-2.96162,1.083672,0.359106,-2.59432,1.581873,0.917429,-2.697986,1.633661,0.355697,-2.250238,2.054675,0.888391,-2.345323,2.111524,0.339745,-2.75135,0.392398,1.533165,-2.627492,0.970125,1.493198,-2.406727,1.491391,1.434543,-2.092438,1.93947,1.390919,-2.412622,0.35654,2.03141,-2.319366,0.904239,1.969109,-2.153621,1.386091,1.874877,-1.897038,1.786537,1.812189,-3.123129,0.492437,-0.279402,-3.155188,-0.135767,-0.317571,-3.006415,0.50191,-0.885467,-3.032,-0.098418,-0.933695,-2.780788,0.513983,-1.441366,-2.798556,-0.058483,-1.496383,-2.460303,0.541055,-1.930975,-2.471028,-0.017436,-1.992037,-2.971104,1.090307,-0.241383,-2.871665,1.073446,-0.822043,-2.671399,1.052943,-1.352567,-2.377472,1.061308,-1.815421,-2.713883,1.631655,-0.216883,-2.639273,1.588306,-0.765517,-2.485628,1.524583,-1.253712,-2.243505,1.505392,-1.665826,-2.367494,2.102762,-0.218771,-2.31959,2.032861,-0.749317,-2.218873,1.919305,-1.21135,-2.112132,1.807618,-1.531637,-3.062539,-0.760208,-0.342684,-2.851575,-1.345471,-0.364312,-2.538798,-1.863988,-0.39313,-2.141823,-2.300636,-0.440644,-2.115063,-2.363708,0.117855,-2.948128,-0.69667,-0.947464,-2.756739,-1.259709,-0.942348,-2.471405,-1.757274,-0.937359,-2.104101,-2.171842,-0.964551,-2.724362,-0.630311,-1.501685,-2.560883,-1.16556,-1.468962,-2.326277,-1.62846,-1.418116,-2.017313,-2.000923,-1.414655,-2.404098,-0.576476,-1.990599,-2.268059,-1.098001,-1.929974,-2.087475,-1.543227,-1.826307,-1.923516,-1.845829,-1.722642],
		normal : [-0.0542,0.9973,0.0498,0.1217,0.9785,-0.1664,-0.0748,0.9859,-0.1494,0.0959,0.9305,-0.3534,-0.0919,0.9358,-0.3404,0.0736,0.8484,-0.5243,-0.1051,0.8513,-0.514,0.0598,0.7365,-0.6738,-0.1144,0.7376,-0.6655,0.146,0.9889,0.0285,0.3118,0.933,-0.1797,0.2782,0.8916,-0.3574,0.2449,0.8182,-0.5202,0.2254,0.7143,-0.6626,0.3385,0.9409,0.0062,0.486,0.8525,-0.1925,0.4463,0.8201,-0.3581,0.3994,0.7654,-0.5045,0.3661,0.6781,-0.6373,0.5136,0.8579,-0.0159,0.6378,0.7414,-0.2088,0.5922,0.7172,-0.3673,0.5384,0.6794,-0.4985,0.4822,0.6346,-0.604,-0.2676,0.9553,-0.126,-0.2519,0.9653,0.069,-0.4484,0.8881,-0.1009,-0.4368,0.8955,0.0854,-0.6094,0.7889,-0.079,-0.6004,0.7936,0.0981,-0.7459,0.6628,-0.0656,-0.7389,0.6653,0.1071,-0.2758,0.9084,-0.3143,-0.4479,0.8487,-0.2813,-0.6016,0.7591,-0.2485,-0.7318,0.6418,-0.2291,-0.2801,0.8275,-0.4866,-0.4411,0.778,-0.4475,-0.5804,0.7087,-0.4011,-0.7028,0.6088,-0.368,-0.2848,0.7163,-0.637,-0.4396,0.6758,-0.5917,-0.5657,0.6247,-0.5383,-0.6654,0.5695,-0.4826,-0.2258,0.9384,0.2618,-0.0315,0.9685,0.2471,-0.1941,0.8752,0.4432,-0.0078,0.9016,0.4326,-0.1622,0.7793,0.6053,0.0156,0.8018,0.5974,-0.1356,0.6547,0.7436,0.0376,0.6746,0.7372,-0.4088,0.8721,0.269,-0.3703,0.8172,0.4416,-0.3289,0.7322,0.5965,-0.2975,0.6172,0.7284,-0.5719,0.7737,0.2725,-0.5288,0.7295,0.4339,-0.4761,0.666,0.5743,-0.4332,0.57,0.6981,-0.7097,0.6478,0.2768,-0.6617,0.6129,0.4319,-0.6042,0.5681,0.5588,-0.5435,0.519,0.6597,0.164,0.9611,0.2222,0.3521,0.9161,0.1917,0.5242,0.8362,0.1609,0.6747,0.7255,0.1355,0.6664,0.7447,-0.0371,0.1783,0.8965,0.4056,0.3569,0.8585,0.3681,0.5206,0.7885,0.3275,0.6637,0.6865,0.2971,0.1923,0.7991,0.5696,0.3586,0.7704,0.5271,0.5056,0.7203,0.4749,0.6388,0.6363,0.4325,0.2098,0.674,0.7083,0.3689,0.6539,0.6605,0.5004,0.6211,0.6032,0.606,0.5816,0.5427,0.1077,-0.0454,0.9931,0.2881,0.1627,0.9437,0.0943,0.1557,0.9833,0.2631,0.3514,0.8985,0.0776,0.3482,0.9342,0.2352,0.5237,0.8188,0.0584,0.5228,0.8504,0.3048,-0.0341,0.9518,0.4682,0.1662,0.8678,0.4364,0.3459,0.8306,0.399,0.5104,0.7618,0.4872,-0.0212,0.8731,0.6266,0.17,0.7606,0.59,0.3377,0.7334,0.5416,0.4865,0.6855,0.6463,-0.0079,0.763,0.7581,0.1784,0.6273,0.7168,0.3392,0.6092,0.6638,0.4732,0.5791,-0.1026,0.1419,0.9846,-0.0941,-0.0549,0.994,-0.2943,0.1256,0.9474,-0.2898,-0.0624,0.955,-0.4714,0.1115,0.8748,-0.4698,-0.0673,0.8802,-0.628,0.1045,0.7711,-0.6287,-0.0698,0.7745,-0.1099,0.3316,0.937,-0.292,0.307,0.9058,-0.4608,0.2816,0.8417,-0.6098,0.2683,0.7458,-0.1196,0.5046,0.855,-0.2891,0.4735,0.832,-0.4407,0.4337,0.7859,-0.5798,0.4063,0.7063,-0.0812,-0.2501,0.9648,0.1166,-0.2445,0.9626,-0.0682,-0.4336,0.8985,0.1205,-0.4314,0.8941,-0.0596,-0.5974,0.7997,0.1197,-0.5971,0.7932,-0.0598,-0.7365,0.6738,0.1144,-0.7376,0.6655,-0.2739,-0.2487,0.929,-0.2523,-0.424,0.8698,-0.2318,-0.5812,0.7801,-0.2254,-0.7143,0.6626,-0.4523,-0.2445,0.8577,-0.4236,-0.4089,0.8083,-0.3877,-0.5522,0.7381,-0.3661,-0.6781,0.6373,-0.6101,-0.2422,0.7544,-0.5747,-0.4005,0.7136,-0.5302,-0.5307,0.6612,-0.4822,-0.6346,0.604,0.309,-0.2288,0.9231,0.4878,-0.2072,0.848,0.6448,-0.1849,0.7416,0.7753,-0.1671,0.6091,0.7785,0.0056,0.6277,0.3041,-0.4128,0.8585,0.4749,-0.3836,0.792,0.6256,-0.3508,0.6968,0.7505,-0.3276,0.574,0.2944,-0.5772,0.7617,0.4547,-0.5422,0.7065,0.5929,-0.497,0.6336,0.7116,-0.4613,0.53,0.2848,-0.7163,0.637,0.4396,-0.6758,0.5917,0.5657,-0.6247,0.5383,0.6654,-0.5695,0.4826,0.0542,-0.9973,-0.0498,0.2676,-0.9553,0.126,0.0748,-0.9859,0.1494,0.2758,-0.9084,0.3143,0.0919,-0.9358,0.3404,0.2801,-0.8275,0.4866,0.1051,-0.8513,0.514,0.2519,-0.9653,-0.069,0.4484,-0.8881,0.1009,0.4479,-0.8487,0.2813,0.4411,-0.778,0.4475,0.4368,-0.8955,-0.0854,0.6094,-0.7889,0.079,0.6016,-0.7591,0.2485,0.5804,-0.7087,0.4011,0.6004,-0.7936,-0.0981,0.7459,-0.6628,0.0656,0.7318,-0.6418,0.2291,0.7028,-0.6088,0.368,-0.1217,-0.9785,0.1664,-0.146,-0.9889,-0.0285,-0.3118,-0.933,0.1797,-0.3385,-0.9409,-0.0062,-0.486,-0.8525,0.1925,-0.5136,-0.8579,0.0159,-0.6378,-0.7414,0.2088,-0.6664,-0.7447,0.0371,-0.0959,-0.9305,0.3534,-0.2782,-0.8916,0.3574,-0.4463,-0.8201,0.3581,-0.5922,-0.7172,0.3673,-0.0736,-0.8484,0.5243,-0.2449,-0.8182,0.5202,-0.3994,-0.7654,0.5045,-0.5384,-0.6794,0.4985,-0.164,-0.9611,-0.2222,0.0315,-0.9685,-0.2471,-0.1783,-0.8965,-0.4056,0.0078,-0.9016,-0.4326,-0.1923,-0.7991,-0.5696,-0.0156,-0.8018,-0.5974,-0.2098,-0.674,-0.7083,-0.0376,-0.6746,-0.7372,-0.3521,-0.9161,-0.1917,-0.3569,-0.8585,-0.3681,-0.3586,-0.7704,-0.5271,-0.3689,-0.6539,-0.6605,-0.5242,-0.8362,-0.1609,-0.5206,-0.7885,-0.3275,-0.5056,-0.7203,-0.4749,-0.5004,-0.6211,-0.6032,-0.6747,-0.7255,-0.1355,-0.6637,-0.6865,-0.2971,-0.6388,-0.6363,-0.4325,-0.606,-0.5816,-0.5427,0.2258,-0.9384,-0.2618,0.4088,-0.8721,-0.269,0.5719,-0.7737,-0.2725,0.7097,-0.6478,-0.2768,0.7389,-0.6653,-0.1071,0.1941,-0.8752,-0.4432,0.3703,-0.8172,-0.4416,0.5288,-0.7295,-0.4339,0.6617,-0.6129,-0.4319,0.1622,-0.7793,-0.6053,0.3289,-0.7322,-0.5965,0.4761,-0.666,-0.5743,0.6042,-0.5681,-0.5588,0.1356,-0.6547,-0.7436,0.2975,-0.6172,-0.7284,0.4332,-0.57,-0.6981,0.5435,-0.519,-0.6597,-0.1077,0.0454,-0.9931,0.1026,-0.1419,-0.9846,-0.0943,-0.1557,-0.9833,0.1099,-0.3316,-0.937,-0.0776,-0.3482,-0.9342,0.1196,-0.5046,-0.855,-0.0584,-0.5228,-0.8504,0.1356,-0.6547,-0.7436,-0.0376,-0.6746,-0.7372,0.0941,0.0549,-0.994,0.2943,-0.1256,-0.9474,0.292,-0.307,-0.9058,0.2891,-0.4735,-0.832,0.2975,-0.6172,-0.7284,0.2898,0.0624,-0.955,0.4714,-0.1115,-0.8748,0.4608,-0.2816,-0.8417,0.4407,-0.4337,-0.7859,0.4332,-0.57,-0.6981,0.4698,0.0673,-0.8802,0.628,-0.1045,-0.7711,0.6098,-0.2683,-0.7458,0.5798,-0.4063,-0.7063,0.5435,-0.519,-0.6597,-0.2881,-0.1627,-0.9437,-0.3048,0.0341,-0.9518,-0.4682,-0.1662,-0.8678,-0.4872,0.0212,-0.8731,-0.6266,-0.17,-0.7606,-0.6463,0.0079,-0.763,-0.7581,-0.1784,-0.6273,-0.7785,-0.0056,-0.6277,-0.2631,-0.3514,-0.8985,-0.4364,-0.3459,-0.8306,-0.59,-0.3377,-0.7334,-0.7168,-0.3392,-0.6092,-0.2352,-0.5237,-0.8188,-0.399,-0.5104,-0.7618,-0.5416,-0.4865,-0.6855,-0.6638,-0.4732,-0.5791,-0.2098,-0.674,-0.7083,-0.3689,-0.6539,-0.6605,-0.5004,-0.6211,-0.6032,-0.606,-0.5816,-0.5427,-0.309,0.2288,-0.9231,-0.1166,0.2445,-0.9626,-0.3041,0.4128,-0.8585,-0.1205,0.4314,-0.8941,-0.2944,0.5772,-0.7617,-0.1197,0.5971,-0.7932,-0.2848,0.7163,-0.637,-0.1144,0.7376,-0.6655,-0.4878,0.2072,-0.848,-0.4749,0.3836,-0.792,-0.4547,0.5422,-0.7065,-0.4396,0.6758,-0.5917,-0.6448,0.1849,-0.7416,-0.6256,0.3508,-0.6968,-0.5929,0.497,-0.6336,-0.5657,0.6247,-0.5383,-0.7753,0.1671,-0.6091,-0.7505,0.3276,-0.574,-0.7116,0.4613,-0.53,-0.6654,0.5695,-0.4826,0.0812,0.2501,-0.9648,0.2739,0.2487,-0.929,0.4523,0.2445,-0.8577,0.6101,0.2422,-0.7544,0.6287,0.0698,-0.7745,0.0682,0.4336,-0.8985,0.2523,0.424,-0.8698,0.4236,0.4089,-0.8083,0.5747,0.4005,-0.7136,0.0596,0.5974,-0.7997,0.2318,0.5812,-0.7801,0.3877,0.5522,-0.7381,0.5302,0.5307,-0.6612,0.0598,0.7365,-0.6738,0.2254,0.7143,-0.6626,0.3661,0.6781,-0.6373,0.4822,0.6346,-0.604,0.9933,0.0532,-0.1021,0.9656,0.2376,0.1056,0.9943,0.043,0.098,0.9302,0.2173,0.2957,0.956,0.0313,0.2918,0.8598,0.1958,0.4715,0.8825,0.0188,0.47,0.9635,0.2519,-0.0903,0.8998,0.4217,0.112,0.8713,0.3938,0.2929,0.8104,0.362,0.4607,0.8956,0.4386,-0.0749,0.8012,0.5862,0.1206,0.7816,0.5526,0.2894,0.74,0.5084,0.4405,0.7946,0.6044,-0.057,0.6747,0.7255,0.1355,0.6637,0.6865,0.2971,0.6388,0.6363,0.4325,0.9845,-0.1527,0.0859,0.983,-0.1472,-0.1098,0.9373,-0.3407,0.0735,0.934,-0.3389,-0.1132,0.8562,-0.5125,0.0652,0.8509,-0.5132,-0.1122,0.7459,-0.6628,0.0656,0.7389,-0.6653,-0.1071,0.9484,-0.1553,0.2764,0.9072,-0.3343,0.2554,0.8344,-0.4984,0.2354,0.7318,-0.6418,0.2291,0.8774,-0.1587,0.4528,0.8447,-0.3259,0.4246,0.7896,-0.4743,0.3892,0.7028,-0.6088,0.368,0.9438,-0.1352,-0.3017,0.9525,0.0614,-0.2984,0.8685,-0.1211,-0.4806,0.8743,0.0669,-0.4808,0.7616,-0.1092,-0.6387,0.7644,0.0698,-0.6409,0.8984,-0.3243,-0.2962,0.831,-0.3021,-0.4672,0.7341,-0.2792,-0.619,0.8191,-0.4971,-0.2863,0.7622,-0.4684,-0.4468,0.6861,-0.4312,-0.5859,0.7097,-0.6478,-0.2768,0.6617,-0.6129,-0.4319,0.6042,-0.5681,-0.5588,0.9245,0.2557,-0.2828,0.8603,0.439,-0.2592,0.7633,0.6027,-0.2327,0.6378,0.7414,-0.2088,0.6664,0.7447,-0.0371,0.8497,0.2525,-0.4629,0.7939,0.4276,-0.4323,0.708,0.5846,-0.3961,0.5922,0.7172,-0.3673,0.7433,0.2464,-0.6219,0.6983,0.4106,-0.5863,0.6347,0.554,-0.5388,0.5384,0.6794,-0.4985,-0.9933,-0.0532,0.1021,-0.9245,-0.2557,0.2828,-0.9525,-0.0614,0.2984,-0.8497,-0.2525,0.4629,-0.8743,-0.0669,0.4808,-0.7433,-0.2464,0.6219,-0.7644,-0.0698,0.6409,-0.9635,-0.2519,0.0903,-0.8603,-0.439,0.2592,-0.7939,-0.4276,0.4323,-0.6983,-0.4106,0.5863,-0.8956,-0.4386,0.0749,-0.7633,-0.6027,0.2327,-0.708,-0.5846,0.3961,-0.6347,-0.554,0.5388,-0.7946,-0.6044,0.057,-0.6378,-0.7414,0.2088,-0.5922,-0.7172,0.3673,-0.5384,-0.6794,0.4985,-0.9438,0.1352,0.3017,-0.983,0.1472,0.1098,-0.8984,0.3243,0.2962,-0.934,0.339,0.1132,-0.8191,0.4971,0.2863,-0.8509,0.5132,0.1122,-0.7097,0.6478,0.2768,-0.7389,0.6653,0.1071,-0.8685,0.1211,0.4806,-0.831,0.3021,0.4672,-0.7622,0.4684,0.4468,-0.6617,0.6129,0.4319,-0.7616,0.1092,0.6387,-0.7341,0.2792,0.619,-0.6861,0.4312,0.5859,-0.6042,0.5681,0.5588,-0.9845,0.1527,-0.0859,-0.9943,-0.043,-0.098,-0.9484,0.1553,-0.2764,-0.956,-0.0313,-0.2918,-0.8774,0.1587,-0.4528,-0.8825,-0.0188,-0.47,-0.7753,0.1671,-0.6091,-0.7785,-0.0056,-0.6277,-0.9373,0.3407,-0.0735,-0.9072,0.3343,-0.2554,-0.8447,0.3259,-0.4246,-0.7505,0.3276,-0.574,-0.8562,0.5125,-0.0652,-0.8344,0.4984,-0.2354,-0.7896,0.4743,-0.3892,-0.7116,0.4613,-0.53,-0.7459,0.6628,-0.0656,-0.7318,0.6418,-0.2291,-0.7028,0.6088,-0.368,-0.6654,0.5695,-0.4826,-0.9656,-0.2376,-0.1056,-0.8998,-0.4217,-0.112,-0.8012,-0.5862,-0.1206,-0.6747,-0.7255,-0.1355,-0.6664,-0.7447,0.0371,-0.9302,-0.2173,-0.2957,-0.8713,-0.3938,-0.2929,-0.7816,-0.5526,-0.2894,-0.6637,-0.6865,-0.2971,-0.8598,-0.1958,-0.4715,-0.8104,-0.362,-0.4607,-0.74,-0.5084,-0.4405,-0.6388,-0.6363,-0.4325,-0.7581,-0.1784,-0.6273,-0.7168,-0.3392,-0.6092,-0.6638,-0.4732,-0.5791,-0.606,-0.5816,-0.5427],
		texcoord: [0.377979,0.82531,0.408469,0.865983,0.377979,0.865983,0.408469,0.906657,0.377979,0.906657,0.408469,0.947331,0.377979,0.947331,0.408469,0.988004,0.377979,0.988004,0.408469,0.82531,0.43896,0.865984,0.43896,0.906657,0.43896,0.947331,0.43896,0.988004,0.43896,0.82531,0.46945,0.865983,0.46945,0.906657,0.46945,0.947331,0.46945,0.988004,0.46945,0.82531,0.49994,0.865983,0.49994,0.906657,0.49994,0.947331,0.49994,0.988004,0.347489,0.865983,0.347489,0.82531,0.316998,0.865984,0.316998,0.82531,0.286508,0.865983,0.286508,0.82531,0.256018,0.865983,0.256018,0.82531,0.347489,0.906657,0.316998,0.906657,0.286508,0.906657,0.256018,0.906657,0.347489,0.947331,0.316998,0.947331,0.286508,0.947331,0.256018,0.947331,0.347489,0.988004,0.316998,0.988004,0.286508,0.988004,0.256018,0.988004,0.347489,0.784636,0.377979,0.784636,0.347489,0.743963,0.377979,0.743962,0.347489,0.703289,0.377979,0.703289,0.347489,0.662615,0.377979,0.662615,0.316998,0.784636,0.316998,0.743962,0.316998,0.703289,0.316998,0.662615,0.286508,0.784636,0.286508,0.743963,0.286508,0.703289,0.286508,0.662615,0.256018,0.784636,0.256018,0.743963,0.256018,0.703289,0.256018,0.662615,0.408469,0.784636,0.43896,0.784636,0.46945,0.784636,0.49994,0.784636,0.49994,0.82531,0.408469,0.743963,0.43896,0.743963,0.46945,0.743963,0.49994,0.743963,0.408469,0.703289,0.43896,0.703289,0.46945,0.703289,0.49994,0.703289,0.408469,0.662615,0.43896,0.662615,0.46945,0.662615,0.49994,0.662615,0.377979,0.5,0.408469,0.540654,0.377979,0.540654,0.408469,0.581308,0.377979,0.581308,0.408469,0.621961,0.377979,0.621961,0.408469,0.5,0.43896,0.540654,0.43896,0.581308,0.43896,0.621961,0.43896,0.5,0.46945,0.540654,0.46945,0.581308,0.46945,0.621961,0.46945,0.5,0.49994,0.540654,0.49994,0.581308,0.49994,0.621961,0.347489,0.540654,0.347489,0.5,0.316998,0.540654,0.316998,0.5,0.286508,0.540654,0.286508,0.5,0.256018,0.540654,0.256018,0.5,0.347489,0.581308,0.316998,0.581308,0.286508,0.581308,0.256018,0.581308,0.347489,0.621961,0.316998,0.621961,0.286508,0.621961,0.256018,0.621961,0.347489,0.459346,0.377979,0.459346,0.347489,0.418692,0.377979,0.418692,0.347489,0.378039,0.377979,0.378039,0.347489,0.337385,0.377979,0.337385,0.316998,0.459346,0.316998,0.418692,0.316998,0.378039,0.316998,0.337385,0.286508,0.459346,0.286508,0.418692,0.286508,0.378039,0.286508,0.337385,0.256018,0.459346,0.256018,0.418692,0.256018,0.378039,0.256018,0.337385,0.408469,0.459346,0.43896,0.459346,0.46945,0.459346,0.49994,0.459346,0.49994,0.5,0.408469,0.418692,0.43896,0.418692,0.46945,0.418692,0.49994,0.418692,0.408469,0.378039,0.43896,0.378039,0.46945,0.378039,0.49994,0.378039,0.408469,0.337385,0.43896,0.337385,0.46945,0.337385,0.49994,0.337385,0.377979,0.17469,0.408469,0.215364,0.377979,0.215364,0.408469,0.256038,0.377979,0.256038,0.408469,0.296711,0.377979,0.296711,0.408469,0.17469,0.43896,0.215364,0.43896,0.256037,0.43896,0.296711,0.43896,0.17469,0.46945,0.215364,0.46945,0.256038,0.46945,0.296711,0.46945,0.17469,0.49994,0.215364,0.49994,0.256038,0.49994,0.296711,0.347489,0.215364,0.347489,0.17469,0.316998,0.215364,0.316998,0.17469,0.286508,0.215364,0.286508,0.17469,0.256018,0.215364,0.256018,0.17469,0.347489,0.256038,0.316998,0.256037,0.286508,0.256038,0.256018,0.256038,0.347489,0.296711,0.316998,0.296711,0.286508,0.296711,0.256018,0.296711,0.347489,0.134017,0.377979,0.134017,0.347489,0.093343,0.377979,0.093343,0.347489,0.052669,0.377979,0.052669,0.347489,0.011996,0.377979,0.011996,0.316998,0.134017,0.316998,0.093343,0.316998,0.052669,0.316998,0.011996,0.286508,0.134017,0.286508,0.093343,0.286508,0.052669,0.286508,0.011996,0.256018,0.134017,0.256018,0.093343,0.256018,0.052669,0.256018,0.011996,0.408469,0.134017,0.43896,0.134017,0.46945,0.134017,0.49994,0.134017,0.49994,0.17469,0.408469,0.093343,0.43896,0.093343,0.46945,0.093343,0.49994,0.093343,0.408469,0.052669,0.43896,0.052669,0.46945,0.052669,0.49994,0.052669,0.408469,0.011996,0.43896,0.011996,0.46945,0.011996,0.49994,0.011996,0.866003,0.5,0.835498,0.459346,0.866003,0.459346,0.835498,0.418692,0.866003,0.418692,0.835498,0.378039,0.866003,0.378039,0.835498,0.337385,0.866003,0.337385,0.835498,0.5,0.804993,0.459346,0.804993,0.418692,0.804993,0.378039,0.804993,0.337385,0.804993,0.5,0.774488,0.459346,0.774488,0.418692,0.774488,0.378039,0.774488,0.337385,0.774488,0.5,0.743982,0.459346,0.743982,0.418692,0.743982,0.378039,0.743982,0.337385,0.896509,0.459346,0.896509,0.5,0.927014,0.459346,0.927014,0.5,0.957519,0.459346,0.957519,0.5,0.988024,0.459346,0.988024,0.5,0.896509,0.418692,0.927014,0.418692,0.957519,0.418692,0.988024,0.418692,0.896509,0.378039,0.927014,0.378039,0.957519,0.378039,0.988024,0.378039,0.896509,0.337385,0.927014,0.337385,0.957519,0.337385,0.988024,0.337385,0.896509,0.540654,0.866003,0.540654,0.896509,0.581308,0.866003,0.581308,0.896509,0.621961,0.866003,0.621961,0.896509,0.662615,0.866003,0.662615,0.927014,0.540654,0.927014,0.581308,0.927014,0.621961,0.927014,0.662615,0.957519,0.540654,0.957519,0.581308,0.957519,0.621961,0.957519,0.662615,0.988024,0.540654,0.988024,0.581308,0.988024,0.621961,0.988024,0.662615,0.835498,0.540654,0.804993,0.540654,0.774488,0.540654,0.743982,0.540654,0.743982,0.5,0.835498,0.581308,0.804993,0.581308,0.774488,0.581308,0.743982,0.581308,0.835498,0.621961,0.804993,0.621961,0.774488,0.621961,0.743982,0.621961,0.835498,0.662615,0.804993,0.662615,0.774488,0.662615,0.743982,0.662615,0.621961,0.5,0.591456,0.540654,0.591456,0.5,0.560951,0.540654,0.560951,0.5,0.530446,0.540654,0.530446,0.5,0.621961,0.540654,0.591456,0.581308,0.560951,0.581308,0.530446,0.581308,0.621961,0.581308,0.591456,0.621961,0.560951,0.621961,0.530446,0.621961,0.621961,0.621961,0.591456,0.662615,0.560951,0.662615,0.530446,0.662615,0.591456,0.459346,0.621961,0.459346,0.591456,0.418692,0.621961,0.418692,0.591456,0.378039,0.621961,0.378039,0.591456,0.337385,0.621961,0.337385,0.560951,0.459346,0.560951,0.418692,0.560951,0.378039,0.560951,0.337385,0.530446,0.459346,0.530446,0.418692,0.530446,0.378039,0.530446,0.337385,0.652467,0.459346,0.652467,0.5,0.682972,0.459346,0.682972,0.5,0.713477,0.459346,0.713477,0.5,0.652467,0.418692,0.682972,0.418692,0.713477,0.418692,0.652467,0.378039,0.682972,0.378039,0.713477,0.378039,0.652467,0.337385,0.682972,0.337385,0.713477,0.337385,0.652467,0.540654,0.652467,0.581308,0.652467,0.621961,0.652467,0.662615,0.621961,0.662615,0.682972,0.540654,0.682972,0.581308,0.682972,0.621961,0.682972,0.662615,0.713477,0.540654,0.713477,0.581308,0.713477,0.621961,0.713477,0.662615,0.133997,0.5,0.164502,0.459346,0.164502,0.5,0.195007,0.459346,0.195007,0.5,0.225512,0.459346,0.225512,0.5,0.133997,0.459346,0.164502,0.418692,0.195007,0.418692,0.225512,0.418692,0.133997,0.418692,0.164502,0.378039,0.195007,0.378039,0.225512,0.378039,0.133997,0.378039,0.164502,0.337385,0.195007,0.337385,0.225512,0.337385,0.164502,0.540654,0.133997,0.540654,0.164502,0.581308,0.133997,0.581308,0.164502,0.621961,0.133997,0.621961,0.164502,0.662615,0.133997,0.662615,0.195007,0.540654,0.195007,0.581308,0.195007,0.621961,0.195007,0.662615,0.225512,0.540654,0.225512,0.581308,0.225512,0.621961,0.225512,0.662615,0.103491,0.540654,0.103491,0.5,0.072986,0.540654,0.072986,0.5,0.042481,0.540654,0.042481,0.5,0.011976,0.540654,0.011976,0.5,0.103491,0.581308,0.072986,0.581308,0.042481,0.581308,0.011976,0.581308,0.103491,0.621961,0.072986,0.621961,0.042481,0.621961,0.011976,0.621961,0.103491,0.662615,0.072986,0.662615,0.042481,0.662615,0.011976,0.662615,0.103491,0.459346,0.103491,0.418692,0.103491,0.378039,0.103491,0.337385,0.133997,0.337385,0.072986,0.459346,0.072986,0.418692,0.072986,0.378039,0.072986,0.337385,0.042481,0.459346,0.042481,0.418692,0.042481,0.378039,0.042481,0.337385,0.011976,0.459346,0.011976,0.418692,0.011976,0.378039,0.011976,0.337385],
		indices : [0,1,2,2,3,4,4,5,6,6,7,8,9,10,1,1,11,3,3,12,5,5,13,7,14,15,10,10,16,11,11,17,12,12,18,13,19,20,15,15,21,16,16,22,17,17,23,18,0,24,25,25,26,27,27,28,29,29,30,31,2,32,24,24,33,26,26,34,28,28,35,30,4,36,32,32,37,33,33,38,34,34,39,35,6,40,36,36,41,37,37,42,38,38,43,39,0,44,45,45,46,47,47,48,49,49,50,51,25,52,44,44,53,46,46,54,48,48,55,50,27,56,52,52,57,53,53,58,54,54,59,55,29,60,56,56,61,57,57,62,58,58,63,59,0,64,9,9,65,14,14,66,19,19,67,68,45,69,64,64,70,65,65,71,66,66,72,67,47,73,69,69,74,70,70,75,71,71,76,72,49,77,73,73,78,74,74,79,75,75,80,76,81,82,83,83,84,85,85,86,87,87,77,51,88,89,82,82,90,84,84,91,86,86,78,77,92,93,89,89,94,90,90,95,91,91,79,78,96,97,93,93,98,94,94,99,95,95,80,79,81,100,101,101,102,103,103,104,105,105,106,107,83,108,100,100,109,102,102,110,104,104,111,106,85,112,108,108,113,109,109,114,110,110,115,111,87,50,112,112,55,113,113,59,114,114,63,115,81,116,117,117,118,119,119,120,121,121,122,123,101,124,116,116,125,118,118,126,120,120,127,122,103,128,124,124,129,125,125,130,126,126,131,127,105,132,128,128,133,129,129,134,130,130,135,131,81,136,88,88,137,92,92,138,96,96,139,140,117,141,136,136,142,137,137,143,138,138,144,139,119,145,141,141,146,142,142,147,143,143,148,144,121,149,145,145,150,146,146,151,147,147,152,148,153,154,155,155,156,157,157,158,159,159,149,123,160,161,154,154,162,156,156,163,158,158,150,149,164,165,161,161,166,162,162,167,163,163,151,150,168,169,165,165,170,166,166,171,167,167,152,151,153,172,173,173,174,175,175,176,177,177,178,179,155,180,172,172,181,174,174,182,176,176,183,178,157,184,180,180,185,181,181,186,182,182,187,183,159,122,184,184,127,185,185,131,186,186,135,187,153,188,189,189,190,191,191,192,193,193,194,195,173,196,188,188,197,190,190,198,192,192,199,194,175,200,196,196,201,197,197,202,198,198,203,199,177,204,200,200,205,201,201,206,202,202,207,203,153,208,160,160,209,164,164,210,168,168,211,212,189,213,208,208,214,209,209,215,210,210,216,211,191,217,213,213,218,214,214,219,215,215,220,216,193,221,217,217,222,218,218,223,219,219,224,220,225,226,227,227,228,229,229,230,231,231,232,233,234,235,226,226,236,228,228,237,230,230,238,232,239,240,235,235,241,236,236,242,237,237,243,238,244,245,240,240,246,241,241,247,242,242,248,243,225,249,250,250,251,252,252,253,254,254,255,256,227,257,249,249,258,251,251,259,253,253,260,255,229,261,257,257,262,258,258,263,259,259,264,260,231,265,261,261,266,262,262,267,263,263,268,264,225,269,270,270,271,272,272,273,274,274,275,276,250,277,269,269,278,271,271,279,273,273,280,275,252,281,277,277,282,278,278,283,279,279,284,280,254,285,281,281,286,282,282,287,283,283,288,284,225,289,234,234,290,239,239,291,244,244,292,293,270,294,289,289,295,290,290,296,291,291,297,292,272,298,294,294,299,295,295,300,296,296,301,297,274,302,298,298,303,299,299,304,300,300,305,301,306,307,308,308,309,310,310,311,312,312,97,140,313,314,307,307,315,309,309,316,311,311,98,97,317,318,314,314,319,315,315,320,316,316,99,98,321,322,318,318,323,319,319,324,320,320,80,99,306,325,326,326,327,328,328,329,330,330,331,332,308,333,325,325,334,327,327,335,329,329,336,331,310,337,333,333,338,334,334,339,335,335,340,336,312,139,337,337,144,338,338,148,339,339,152,340,306,341,342,342,343,344,344,345,346,346,245,293,326,347,341,341,348,343,343,349,345,345,246,245,328,350,347,347,351,348,348,352,349,349,247,246,330,353,350,350,354,351,351,355,352,352,248,247,306,356,313,313,357,317,317,358,321,321,359,360,342,361,356,356,362,357,357,363,358,358,364,359,344,365,361,361,366,362,362,367,363,363,368,364,346,292,365,365,297,366,366,301,367,367,305,368,369,370,371,371,372,373,373,374,375,375,132,107,376,377,370,370,378,372,372,379,374,374,133,132,380,381,377,377,382,378,378,383,379,379,134,133,384,385,381,381,386,382,382,387,383,383,135,134,369,388,389,389,390,391,391,392,393,393,394,395,371,396,388,388,397,390,390,398,392,392,399,394,373,400,396,396,401,397,397,402,398,398,403,399,375,106,400,400,111,401,401,115,402,402,63,403,369,404,405,405,406,407,407,408,409,409,410,411,389,412,404,404,413,406,406,414,408,408,415,410,391,416,412,412,417,413,413,418,414,414,419,415,393,420,416,416,421,417,417,422,418,418,423,419,369,424,376,376,425,380,380,426,384,384,427,428,405,429,424,424,430,425,425,431,426,426,432,427,407,433,429,429,434,430,430,435,431,431,436,432,409,437,433,433,438,434,434,439,435,435,440,436,0,9,1,2,1,3,4,3,5,6,5,7,9,14,10,1,10,11,3,11,12,5,12,13,14,19,15,10,15,16,11,16,17,12,17,18,19,68,20,15,20,21,16,21,22,17,22,23,0,2,24,25,24,26,27,26,28,29,28,30,2,4,32,24,32,33,26,33,34,28,34,35,4,6,36,32,36,37,33,37,38,34,38,39,6,8,40,36,40,41,37,41,42,38,42,43,0,25,44,45,44,46,47,46,48,49,48,50,25,27,52,44,52,53,46,53,54,48,54,55,27,29,56,52,56,57,53,57,58,54,58,59,29,31,60,56,60,61,57,61,62,58,62,63,0,45,64,9,64,65,14,65,66,19,66,67,45,47,69,64,69,70,65,70,71,66,71,72,47,49,73,69,73,74,70,74,75,71,75,76,49,51,77,73,77,78,74,78,79,75,79,80,81,88,82,83,82,84,85,84,86,87,86,77,88,92,89,82,89,90,84,90,91,86,91,78,92,96,93,89,93,94,90,94,95,91,95,79,96,140,97,93,97,98,94,98,99,95,99,80,81,83,100,101,100,102,103,102,104,105,104,106,83,85,108,100,108,109,102,109,110,104,110,111,85,87,112,108,112,113,109,113,114,110,114,115,87,51,50,112,50,55,113,55,59,114,59,63,81,101,116,117,116,118,119,118,120,121,120,122,101,103,124,116,124,125,118,125,126,120,126,127,103,105,128,124,128,129,125,129,130,126,130,131,105,107,132,128,132,133,129,133,134,130,134,135,81,117,136,88,136,137,92,137,138,96,138,139,117,119,141,136,141,142,137,142,143,138,143,144,119,121,145,141,145,146,142,146,147,143,147,148,121,123,149,145,149,150,146,150,151,147,151,152,153,160,154,155,154,156,157,156,158,159,158,149,160,164,161,154,161,162,156,162,163,158,163,150,164,168,165,161,165,166,162,166,167,163,167,151,168,212,169,165,169,170,166,170,171,167,171,152,153,155,172,173,172,174,175,174,176,177,176,178,155,157,180,172,180,181,174,181,182,176,182,183,157,159,184,180,184,185,181,185,186,182,186,187,159,123,122,184,122,127,185,127,131,186,131,135,153,173,188,189,188,190,191,190,192,193,192,194,173,175,196,188,196,197,190,197,198,192,198,199,175,177,200,196,200,201,197,201,202,198,202,203,177,179,204,200,204,205,201,205,206,202,206,207,153,189,208,160,208,209,164,209,210,168,210,211,189,191,213,208,213,214,209,214,215,210,215,216,191,193,217,213,217,218,214,218,219,215,219,220,193,195,221,217,221,222,218,222,223,219,223,224,225,234,226,227,226,228,229,228,230,231,230,232,234,239,235,226,235,236,228,236,237,230,237,238,239,244,240,235,240,241,236,241,242,237,242,243,244,293,245,240,245,246,241,246,247,242,247,248,225,227,249,250,249,251,252,251,253,254,253,255,227,229,257,249,257,258,251,258,259,253,259,260,229,231,261,257,261,262,258,262,263,259,263,264,231,233,265,261,265,266,262,266,267,263,267,268,225,250,269,270,269,271,272,271,273,274,273,275,250,252,277,269,277,278,271,278,279,273,279,280,252,254,281,277,281,282,278,282,283,279,283,284,254,256,285,281,285,286,282,286,287,283,287,288,225,270,289,234,289,290,239,290,291,244,291,292,270,272,294,289,294,295,290,295,296,291,296,297,272,274,298,294,298,299,295,299,300,296,300,301,274,276,302,298,302,303,299,303,304,300,304,305,306,313,307,308,307,309,310,309,311,312,311,97,313,317,314,307,314,315,309,315,316,311,316,98,317,321,318,314,318,319,315,319,320,316,320,99,321,360,322,318,322,323,319,323,324,320,324,80,306,308,325,326,325,327,328,327,329,330,329,331,308,310,333,325,333,334,327,334,335,329,335,336,310,312,337,333,337,338,334,338,339,335,339,340,312,140,139,337,139,144,338,144,148,339,148,152,306,326,341,342,341,343,344,343,345,346,345,245,326,328,347,341,347,348,343,348,349,345,349,246,328,330,350,347,350,351,348,351,352,349,352,247,330,332,353,350,353,354,351,354,355,352,355,248,306,342,356,313,356,357,317,357,358,321,358,359,342,344,361,356,361,362,357,362,363,358,363,364,344,346,365,361,365,366,362,366,367,363,367,368,346,293,292,365,292,297,366,297,301,367,301,305,369,376,370,371,370,372,373,372,374,375,374,132,376,380,377,370,377,378,372,378,379,374,379,133,380,384,381,377,381,382,378,382,383,379,383,134,384,428,385,381,385,386,382,386,387,383,387,135,369,371,388,389,388,390,391,390,392,393,392,394,371,373,396,388,396,397,390,397,398,392,398,399,373,375,400,396,400,401,397,401,402,398,402,403,375,107,106,400,106,111,401,111,115,402,115,63,369,389,404,405,404,406,407,406,408,409,408,410,389,391,412,404,412,413,406,413,414,408,414,415,391,393,416,412,416,417,413,417,418,414,418,419,393,395,420,416,420,421,417,421,422,418,422,423,369,405,424,376,424,425,380,425,426,384,426,427,405,407,429,424,429,430,425,430,431,426,431,432,407,409,433,429,433,434,430,434,435,431,435,436,409,411,437,433,437,438,434,438,439,435,439,440]
	}
}



{

	function normalMode(vert, ind, key) {
		switch (key) {
			case "derivate":
				return [blend(vert, normalArrayDerivate(vert)), ind];
			case "quotato":
				// Here the vertex normal is formed by adding to a vertex
				// all the weighted normal of the triangles connected to the vertex.
				// the weighting is done using the angle of the triangle of the of the vertex
				return [blend(vert, normalArrayQuotato(vert, ind)), ind];
			default:
				// Here the vertex normal is formed by adding to a vertex
				// all the normal of the triangles connected to the vertex.
				return [blend(vert, normalArray(vert, ind)), ind];
		}
	}

	function blend(verts_A, verts_B) {
		var i, j, out;
		var lv = verts_A[0].length, ln = verts_B[0].length;
		out = [];
		for (i = 0; i < verts_A.length; i++) {
			out[i] = [];
			for (j = 0; j < lv; j++) out[i].push(verts_A[i][j]);
			for (j = 0; j < ln; j++) out[i].push(verts_B[i][j]);
		}
		return out;
	}

	function normalArray(vertices, indices) {
		var normArray = new Array(vertices.length);
		// the normal vector need to keep count of all the normal applied to a vector
		for (var i = 0; i < indices.length; i = i + 3) {
			var norm = normalVector3Points(vertices[indices[i]], vertices[indices[i + 1]], vertices[indices[i + 2]]);
			for (var k = 0; k < 3; k++) {
				if (normArray[indices[i + k]] === undefined) normArray[indices[i + k]] = norm;
				else normArray[indices[i + k]] = addVectors(normArray[indices[i + k]], norm);
			}
		}
		for (var i = 0; i < normArray.length; i++) normArray[i] = normalizeVector(normArray[i]);
		return normArray;
	}

	function normalArrayQuotato(vertices, indices) {
		var normArray = new Array(vertices.length);
		for (var i = 0; i < indices.length; i = i + 3) {
			// this function require a specific order of the verteces of a triangle
			// b<-a	   c
			// | /	  /|
			// |/	 / |
			// c	a->b
			var norm = normalVector3Points(vertices[indices[i]], vertices[indices[i + 1]], vertices[indices[i + 2]]);
			var AB = [subVector(vertices[indices[i + 1]], vertices[indices[i]]),];
			AB.push(Math.sqrt(dotProductVector(AB[0], AB[0])));
			var AC = [subVector(vertices[indices[i + 2]], vertices[indices[i]]),];
			AC.push(Math.sqrt(dotProductVector(AC[0], AC[0])));
			var BC = [subVector(vertices[indices[i + 2]], vertices[indices[i + 1]]),];
			BC.push(Math.sqrt(dotProductVector(BC[0], BC[0])));
			var quote = [];
			quote.push(dotProductVector(AB[0], AC[0]) / (AB[1] * AC[1]));
			quote.push(dotProductVector(AB[0], BC[0]) / (AB[1] * BC[1]));
			quote.push(dotProductVector(BC[0], AC[0]) / (BC[1] * AC[1]));
			for (var k = 0; k < 3; k++) {
				quote[k] = Math.acos(quote[k])
				var normalModified = scalarVector(quote[k], normalizeVector(norm));
				if (normArray[indices[i + k]] === undefined) normArray[indices[i + k]] = normalModified;
				else normArray[indices[i + k]] = addVectors(normArray[indices[i + k]], normalModified);
			}
		}
		for (var i = 0; i < normArray.length; i++) normArray[i] = normalizeVector(normArray[i]);
		return normArray;
	}

	function normalArrayDerivate(vert) {
		var normArray = new Array(vert.length);
		for (var i = 0; i < vert.length; i++) {
			normArray[i] = [
				-Math.cos(vert[i][0]) * Math.cos(vert[i][2]),
				1,
				Math.sin(vert[i][0]) * Math.sin(vert[i][2])
			]
		}
		for (var i = 0; i < normArray.length; i++) normArray[i] = normalizeVector(normArray[i]);
		return normArray
	}

	function normalVector3Points(a, b, c) {
		//to obtain the normal vector of a plane generated by 3 point:	n = (B-A)×(C-A) 
		return crossProductVector(subVector(b, a), subVector(c, a));
	}

	function crossProductVector(vect_A, vect_B) {
		return [
			vect_A[1] * vect_B[2] - vect_A[2] * vect_B[1],
			vect_A[2] * vect_B[0] - vect_A[0] * vect_B[2],
			vect_A[0] * vect_B[1] - vect_A[1] * vect_B[0]
		];
	}

	function dotProductVector(vect_A, vect_B) {
		return vect_A[0] * vect_B[0] + vect_A[1] * vect_B[1] + vect_A[2] * vect_B[2];
	}

	function addVectors(vect_A, vect_B) {
		return [vect_A[0] + vect_B[0], vect_A[1] + vect_B[1], vect_A[2] + vect_B[2]];
	}

	function subVector(vect_A, vect_B) {
		return [vect_A[0] - vect_B[0], vect_A[1] - vect_B[1], vect_A[2] - vect_B[2]];
	}

	function normalizeVector(vector) {
		return scalarVector(1 / Math.sqrt(dotProductVector(vector, vector)), vector);
	}

	function scalarVector(scalar, vector) {
		return [scalar * vector[0], scalar * vector[1], scalar * vector[2]];
	}

	function hexToRgb(hex) {
		var result = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(hex);
		return result ? {
			r: parseInt(result[1], 16),
			g: parseInt(result[2], 16),
			b: parseInt(result[3], 16)
		} : null;
	}
}